name: Development CI/CD

on:
  push:
    branches: [ develop ]
    paths:
      - 'api/**'
      - 'producer/**'
      - 'consumer/**'
      - '.github/workflows/dev.yml'
  pull_request:
    branches: [ develop ]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY_PREFIX: bilira

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, producer, consumer]
        
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG ${{ matrix.service }}
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:latest
        
        # Push Docker image
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:latest

    - name: Update kube config
      run: aws eks update-kubeconfig --name bilira-eks-cluster --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        # Update deployment image
        kubectl set image deployment/${{ matrix.service }}-deployment ${{ matrix.service }}=$ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG -n default
        
        # Verify deployment
        kubectl rollout status deployment/${{ matrix.service }}-deployment -n default 