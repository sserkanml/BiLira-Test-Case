name: Production CI/CD

on:
  push:
    branches: [ master ]
    paths:
      - 'api/**'
      - 'producer/**'
      - 'consumer/**'
      - '.github/workflows/prod.yml'
  release:
    types: [published]
  workflow_dispatch:

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY_PREFIX: bilira

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [api, producer, consumer]
        
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get AWS account ID
      id: get-aws-account
      run: |
        echo "::set-output name=account_id::$(aws sts get-caller-identity --query Account --output text)"

    - name: Configure kubectl
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name bilira-eks-cluster  

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG ./${{ matrix.service }}
        
        # Tag also as latest
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:latest
        
        # Push both tags
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:latest

    - name: Deploy to EKS with Helm
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Debug için image bilgisini yazdır
        echo "Using image: $ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }}:$IMAGE_TAG"
        
        helm upgrade --install ${{ matrix.service }} ./k8s/helm/${{ matrix.service }} \
          --set image.repository=$ECR_REGISTRY/$ECR_REPOSITORY_PREFIX-${{ matrix.service }} \
          --set image.tag=$IMAGE_TAG \
          --namespace default \
          --wait

        # Pod durumunu kontrol et
        kubectl get pods -n default | grep ${{ matrix.service }}
        
        # Detaylı pod bilgisi
        kubectl describe pod -l app=${{ matrix.service }} -n default

  